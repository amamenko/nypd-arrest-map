{"version":3,"sources":["../webpack/bootstrap","../node_modules/symbol-observable/es/index.js","../node_modules/symbol-observable/es/ponyfill.js","../node_modules/webpack/buildin/global.js","../node_modules/webpack/buildin/harmony-module.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/redux/es/redux.js","../node_modules/redux-in-worker/src/exposeStore.js","store.worker.js","../node_modules/redux-in-worker/src/wrapStore.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","root","self","window","global","result","ponyfill","symbolObservablePonyfill","observable","g","this","Function","e","originalModule","webpackPolyfill","children","_defineProperty","obj","configurable","writable","ownKeys","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","randomString","Math","random","toString","substring","split","join","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","proto","getPrototypeOf","createStore","reducer","preloadedState","enhancer","_ref2","Error","undefined","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","slice","getState","subscribe","listener","isSubscribed","index","indexOf","splice","dispatch","action","type","listeners","replaceReducer","nextReducer","_ref","outerSubscribe","observer","TypeError","observeState","next","unsubscribe","$$observable","getUndefinedStateErrorMessage","actionType","String","idCount","idSet","Set","idMap","WeakMap","createPatches","state","patches","idSetToRemove","id","rootObj","rootDest","pending","dest","pop","has","baseObj","delete","markUsed","set","add","props","unshift","isArray","Array","prop","walk","initialState","loadDataReducer","data","filteredDataReducer","changed","filteredDataChunksReducer","newYearFinishedLoadingReducer","finished","ageFilterReducer","age","boroughFilterReducer","borough","categoryFilterReducer","category","offenseFilterReducer","offense","raceFilterReducer","race","sexFilterReducer","sex","ageTimelineColumnReducer","columns","boroughTimelineColumnsReducer","categoryTimelineColumnsReducer","raceTimelineColumnsReducer","sexTimelineColumnsReducer","ageGroupTimelineGraphDataReducer","boroughTimelineGraphDataReducer","categoryTimelineGraphDataReducer","genderTimelineGraphDataReducer","raceTimelineGraphDataReducer","totalCountReducer","total","resetFiltersReducer","reset","applyingFiltersReducer","filters","trendsAvailableReducer","available","ASSIGN_LOAD_DATA","FILTERED_DATA_CHANGED","FILTERED_DATA_CHANGED_RESET","FILTERED_DATA_CHUNKS_ADD_YEAR","FILTERED_DATA_CHUNKS_ADD_TO_YEAR","ASSIGN_FILTERED_DATA_CHUNKS","CHANGE_AGE_FILTER","CHANGE_BOROUGH_FILTER","CHANGE_CATEGORY_FILTER","CHANGE_OFFENSE_FILTER","CHANGE_RACE_FILTER","CHANGE_SEX_FILTER","AGE_TIMELINE_COLUMNS","BOROUGH_TIMELINE_COLUMNS","CATEGORY_TIMELINE_COLUMNS","RACE_TIMELINE_COLUMNS","SEX_TIMELINE_COLUMNS","TIMELINE_AGE_GROUP_GRAPH_DATA","TIMELINE_BOROUGH_GRAPH_DATA","TIMELINE_CATEGORY_GRAPH_DATA","TIMELINE_GENDER_GRAPH_DATA","TIMELINE_RACE_GRAPH_DATA","INCREMENT_TOTAL_COUNT","APPLYING_FILTERS","APPLYING_FILTERS_RESET","RESET_FILTERS","RESET_FILTERS_RESET","NEW_YEAR_FINISHED_LOADING","NEW_YEAR_FINISHED_LOADING_RESET","TRENDS_AVAILABLE","TRENDS_NOT_AVAILABLE","store","onmessage","postMessage","exposeStore","reducers","reducerKeys","finalReducers","process","shapeAssertionError","finalReducerKeys","assertReducerShape","hasChanged","nextState","_i","_key","previousStateForKey","nextStateForKey","errorMessage","combineReducers","newConcatState","assign","concat","newPushState","dataIndex","dataLength","ageTimelineColumnsReducer"],"mappings":"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","file":"static/js/store.worker.3c240044.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && \"action \\\"\" + String(actionType) + \"\\\"\" || 'an action';\n  return \"Given \" + actionDescription + \", reducer \\\"\" + key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle \" + ActionTypes.INIT + \" or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\"bindActionCreators expected an object or a function, instead received \" + (actionCreators === null ? 'null' : typeof actionCreators) + \". \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    keys.push.apply(keys, Object.getOwnPropertySymbols(object));\n  }\n\n  if (enumerableOnly) keys = keys.filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n  });\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread2({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n","/* eslint no-plusplus: 0 */\n\nexport const PATCH_TYPE_CREATE_OBJECT = 1;\nexport const PATCH_TYPE_DELETE_OBJECT = 2;\nexport const PATCH_TYPE_RETURN_STATE = 3;\n\nlet idCount = 0;\nconst idSet = new Set();\nconst idMap = new WeakMap();\nconst createPatches = (state) => {\n  const patches = [];\n\n  // better way to detect \"DELETE_OBJECT\"?\n  const idSetToRemove = new Set(idSet);\n  const markUsed = (baseObj) => {\n    const pending = [baseObj];\n    while (pending.length) {\n      const obj = pending.pop();\n      const id = idMap.get(obj);\n      if (idSetToRemove.has(id)) {\n        idSetToRemove.delete(id);\n        Object.keys(obj).forEach((name) => {\n          if (typeof obj[name] === 'object' && obj[name] !== null) {\n            pending.push(obj[name]);\n          }\n        });\n      }\n    }\n  };\n\n  // is there a better way?\n  const walk = (rootObj) => {\n    const rootDest = {};\n    const pending = [{ obj: rootObj, dest: rootDest }];\n    while (pending.length) {\n      const { obj, dest } = pending.pop();\n      if (idMap.has(obj)) {\n        markUsed(obj);\n        dest.id = idMap.get(obj);\n      } else {\n        const id = ++idCount;\n        dest.id = id;\n        idMap.set(obj, id);\n        idSet.add(id);\n        const props = {};\n        patches.unshift({\n          type: PATCH_TYPE_CREATE_OBJECT,\n          isArray: Array.isArray(obj),\n          id,\n          props,\n        });\n        Object.keys(obj).forEach((name) => {\n          const value = obj[name];\n          if (typeof value === 'object' && value !== null) {\n            const prop = {};\n            props[name] = prop;\n            pending.push({ obj: value, dest: prop });\n          } else {\n            props[name] = value;\n          }\n        });\n      }\n    }\n    return rootDest.id;\n  };\n\n  patches.push({\n    type: PATCH_TYPE_RETURN_STATE,\n    id: walk(state),\n  });\n\n  idSetToRemove.forEach((id) => {\n    idSet.delete(id);\n    patches.push({\n      type: PATCH_TYPE_DELETE_OBJECT,\n      id,\n    });\n  });\n\n  return patches;\n};\n\nexport const exposeStore = (store) => {\n  self.onmessage = (e) => {\n    const action = e.data;\n    if (typeof action.type === 'string') {\n      store.dispatch(action);\n    }\n  };\n  const listener = () => {\n    const patches = createPatches(store.getState());\n    self.postMessage(patches);\n  };\n  store.subscribe(listener);\n  listener(); // run once\n};\n","import { createStore, combineReducers } from \"redux\";\nimport { exposeStore } from \"redux-in-worker\";\n\nconst initialState = {\n  loadDataReducer: {\n    data: [],\n  },\n  filteredDataReducer: {\n    changed: false,\n  },\n  filteredDataChunksReducer: {\n    data: [],\n  },\n  newYearFinishedLoadingReducer: { finished: false },\n  ageFilterReducer: {\n    age: [],\n  },\n  boroughFilterReducer: { borough: [] },\n  categoryFilterReducer: { category: [] },\n  offenseFilterReducer: { offense: [] },\n  raceFilterReducer: { race: [] },\n  sexFilterReducer: { sex: [] },\n  ageTimelineColumnReducer: { columns: [] },\n  boroughTimelineColumnsReducer: { columns: [] },\n  categoryTimelineColumnsReducer: { columns: [] },\n  raceTimelineColumnsReducer: { columns: [] },\n  sexTimelineColumnsReducer: { columns: [] },\n  ageGroupTimelineGraphDataReducer: { data: [] },\n  boroughTimelineGraphDataReducer: { data: [] },\n  categoryTimelineGraphDataReducer: { data: [] },\n  genderTimelineGraphDataReducer: { data: [] },\n  raceTimelineGraphDataReducer: { data: [] },\n  totalCountReducer: { total: 0 },\n  resetFiltersReducer: { reset: false },\n  applyingFiltersReducer: { filters: false },\n  trendsAvailableReducer: { available: false },\n};\n\nconst currentState = {\n  loadDataReducer: {\n    data: [],\n  },\n};\n\nconst ASSIGN_LOAD_DATA = \"ASSIGN_LOAD_DATA\";\n\nconst loadDataReducer = (state = initialState.loadDataReducer, action) => {\n  switch (action.type) {\n    case ASSIGN_LOAD_DATA:\n      let newConcatState = Object.assign([], state.data);\n      newConcatState = newConcatState.concat(action.data);\n\n      currentState.loadDataReducer.data = newConcatState;\n\n      return {\n        ...state,\n        data: newConcatState,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst FILTERED_DATA_CHANGED = \"FILTERED_DATA_CHANGED\";\nconst FILTERED_DATA_CHANGED_RESET = \"FILTERED_DATA_CHANGED_RESET\";\n\nconst filteredDataReducer = (\n  state = initialState.filteredDataReducer,\n  action\n) => {\n  switch (action.type) {\n    case FILTERED_DATA_CHANGED:\n      return {\n        ...state,\n        changed: true,\n      };\n    case FILTERED_DATA_CHANGED_RESET:\n      return {\n        ...state,\n        changed: false,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst FILTERED_DATA_CHUNKS_ADD_YEAR = \"FILTERED_DATA_CHUNKS_ADD_YEAR\";\nconst FILTERED_DATA_CHUNKS_ADD_TO_YEAR = \"FILTERED_DATA_CHUNKS_ADD_TO_YEAR\";\nconst ASSIGN_FILTERED_DATA_CHUNKS = \"ASSIGN_FILTERED_DATA_CHUNKS\";\n\nconst filteredDataChunksReducer = (\n  state = initialState.filteredDataChunksReducer,\n  action\n) => {\n  switch (action.type) {\n    case FILTERED_DATA_CHUNKS_ADD_YEAR:\n      const newPushState = Object.assign([], state.data);\n      newPushState.push(action.data);\n\n      return { ...state, data: newPushState };\n\n    case FILTERED_DATA_CHUNKS_ADD_TO_YEAR:\n      const newConcatState = Object.assign([], state.data);\n      if (newConcatState[action.dataIndex]) {\n        newConcatState[action.dataIndex] = newConcatState[\n          action.dataIndex\n        ].concat(action.data);\n      }\n\n      return {\n        ...state,\n        data: newConcatState,\n      };\n    case ASSIGN_FILTERED_DATA_CHUNKS:\n      return { ...state, data: action.data };\n    default:\n      return { ...state };\n  }\n};\n\nconst CHANGE_AGE_FILTER = \"CHANGE_AGE_FILTER\";\n\nconst ageFilterReducer = (state = initialState.ageFilterReducer, action) => {\n  switch (action.type) {\n    case CHANGE_AGE_FILTER:\n      return {\n        ...state,\n        age: action.age,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst CHANGE_BOROUGH_FILTER = \"CHANGE_BOROUGH_FILTER\";\n\nconst boroughFilterReducer = (\n  state = initialState.boroughFilterReducer,\n  action\n) => {\n  switch (action.type) {\n    case CHANGE_BOROUGH_FILTER:\n      return {\n        ...state,\n        borough: action.borough,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst CHANGE_CATEGORY_FILTER = \"CHANGE_CATEGORY_FILTER\";\n\nconst categoryFilterReducer = (\n  state = initialState.categoryFilterReducer,\n  action\n) => {\n  switch (action.type) {\n    case CHANGE_CATEGORY_FILTER:\n      return {\n        ...state,\n        category: action.category,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst CHANGE_OFFENSE_FILTER = \"CHANGE_OFFENSE_FILTER\";\n\nconst offenseFilterReducer = (\n  state = initialState.offenseFilterReducer,\n  action\n) => {\n  switch (action.type) {\n    case CHANGE_OFFENSE_FILTER:\n      return {\n        ...state,\n        offense: action.offense,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst CHANGE_RACE_FILTER = \"CHANGE_RACE_FILTER\";\n\nconst raceFilterReducer = (state = initialState.raceFilterReducer, action) => {\n  switch (action.type) {\n    case CHANGE_RACE_FILTER:\n      return {\n        ...state,\n        race: action.race,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst CHANGE_SEX_FILTER = \"CHANGE_SEX_FILTER\";\n\nconst sexFilterReducer = (state = initialState.sexFilterReducer, action) => {\n  switch (action.type) {\n    case CHANGE_SEX_FILTER:\n      return {\n        ...state,\n        sex: action.sex,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst AGE_TIMELINE_COLUMNS = \"AGE_TIMELINE_COLUMNS\";\n\nconst ageTimelineColumnsReducer = (\n  state = initialState.ageTimelineColumnsReducer,\n  action\n) => {\n  switch (action.type) {\n    case AGE_TIMELINE_COLUMNS:\n      return {\n        ...state,\n        columns: action.columns,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst BOROUGH_TIMELINE_COLUMNS = \"BOROUGH_TIMELINE_COLUMNS\";\n\nconst boroughTimelineColumnsReducer = (\n  state = initialState.boroughTimelineColumnsReducer,\n  action\n) => {\n  switch (action.type) {\n    case BOROUGH_TIMELINE_COLUMNS:\n      return {\n        ...state,\n        columns: action.columns,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst CATEGORY_TIMELINE_COLUMNS = \"CATEGORY_TIMELINE_COLUMNS\";\n\nconst categoryTimelineColumnsReducer = (\n  state = initialState.categoryTimelineColumnsReducer,\n  action\n) => {\n  switch (action.type) {\n    case CATEGORY_TIMELINE_COLUMNS:\n      return {\n        ...state,\n        columns: action.columns,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst RACE_TIMELINE_COLUMNS = \"RACE_TIMELINE_COLUMNS\";\n\nconst raceTimelineColumnsReducer = (\n  state = initialState.raceTimelineColumnsReducer,\n  action\n) => {\n  switch (action.type) {\n    case RACE_TIMELINE_COLUMNS:\n      return {\n        ...state,\n        columns: action.columns,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst SEX_TIMELINE_COLUMNS = \"SEX_TIMELINE_COLUMNS\";\n\nconst sexTimelineColumnsReducer = (\n  state = initialState.sexTimelineColumnsReducer,\n  action\n) => {\n  switch (action.type) {\n    case SEX_TIMELINE_COLUMNS:\n      return {\n        ...state,\n        columns: action.columns,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst TIMELINE_AGE_GROUP_GRAPH_DATA = \"TIMELINE_AGE_GROUP_GRAPH_DATA\";\n\nconst ageGroupTimelineGraphDataReducer = (\n  state = initialState.ageGroupTimelineGraphDataReducer,\n  action\n) => {\n  switch (action.type) {\n    case TIMELINE_AGE_GROUP_GRAPH_DATA:\n      return {\n        ...state,\n        data: action.data,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst TIMELINE_BOROUGH_GRAPH_DATA = \"TIMELINE_BOROUGH_GRAPH_DATA\";\n\nconst boroughTimelineGraphDataReducer = (\n  state = initialState.boroughTimelineGraphDataReducer,\n  action\n) => {\n  switch (action.type) {\n    case TIMELINE_BOROUGH_GRAPH_DATA:\n      return {\n        ...state,\n        data: action.data,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst TIMELINE_CATEGORY_GRAPH_DATA = \"TIMELINE_CATEGORY_GRAPH_DATA\";\n\nconst categoryTimelineGraphDataReducer = (\n  state = initialState.categoryTimelineGraphDataReducer,\n  action\n) => {\n  switch (action.type) {\n    case TIMELINE_CATEGORY_GRAPH_DATA:\n      return {\n        ...state,\n        data: action.data,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst TIMELINE_GENDER_GRAPH_DATA = \"TIMELINE_GENDER_GRAPH_DATA\";\n\nconst genderTimelineGraphDataReducer = (\n  state = initialState.genderTimelineGraphDataReducer,\n  action\n) => {\n  switch (action.type) {\n    case TIMELINE_GENDER_GRAPH_DATA:\n      return {\n        ...state,\n        data: action.data,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst TIMELINE_RACE_GRAPH_DATA = \"TIMELINE_RACE_GRAPH_DATA\";\n\nconst raceTimelineGraphDataReducer = (\n  state = initialState.raceTimelineGraphDataReducer,\n  action\n) => {\n  switch (action.type) {\n    case TIMELINE_RACE_GRAPH_DATA:\n      return {\n        ...state,\n        data: action.data,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst INCREMENT_TOTAL_COUNT = \"INCREMENT_TOTAL_COUNT\";\n\nconst totalCountReducer = (state = initialState.totalCountReducer, action) => {\n  switch (action.type) {\n    case INCREMENT_TOTAL_COUNT:\n      return {\n        ...state,\n        total: state.total + action.dataLength,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst APPLYING_FILTERS = \"APPLYING_FILTERS\";\nconst APPLYING_FILTERS_RESET = \"APPLYING_FILTERS_RESET\";\n\nconst applyingFiltersReducer = (\n  state = initialState.applyingFiltersReducer,\n  action\n) => {\n  switch (action.type) {\n    case APPLYING_FILTERS:\n      return {\n        ...state,\n        filters: true,\n      };\n    case APPLYING_FILTERS_RESET:\n      return {\n        ...state,\n        filters: false,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst RESET_FILTERS = \"RESET_FILTERS\";\nconst RESET_FILTERS_RESET = \"RESET_FILTERS_RESET\";\n\nconst resetFiltersReducer = (\n  state = initialState.resetFiltersReducer,\n  action\n) => {\n  switch (action.type) {\n    case RESET_FILTERS:\n      return {\n        ...state,\n        reset: true,\n      };\n    case RESET_FILTERS_RESET:\n      return {\n        ...state,\n        reset: false,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst NEW_YEAR_FINISHED_LOADING = \"NEW_YEAR_FINISHED_LOADING\";\nconst NEW_YEAR_FINISHED_LOADING_RESET = \"NEW_YEAR_FINISHED_LOADING_RESET\";\n\nconst newYearFinishedLoadingReducer = (\n  state = initialState.newYearFinishedLoadingReducer,\n  action\n) => {\n  switch (action.type) {\n    case NEW_YEAR_FINISHED_LOADING:\n      return {\n        ...state,\n        finished: true,\n      };\n    case NEW_YEAR_FINISHED_LOADING_RESET:\n      return {\n        ...state,\n        finished: false,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst TRENDS_AVAILABLE = \"TRENDS_AVAILABLE\";\nconst TRENDS_NOT_AVAILABLE = \"TRENDS_NOT_AVAILABLE\";\n\nconst trendsAvailableReducer = (\n  state = initialState.trendsAvailableReducer,\n  action\n) => {\n  switch (action.type) {\n    case TRENDS_AVAILABLE:\n      return {\n        ...state,\n        available: true,\n      };\n    case TRENDS_NOT_AVAILABLE:\n      return {\n        ...state,\n        available: false,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst RootReducer = combineReducers({\n  // General data states\n  loadDataReducer: loadDataReducer,\n  filteredDataReducer: filteredDataReducer,\n  filteredDataChunksReducer: filteredDataChunksReducer,\n  totalCountReducer: totalCountReducer,\n  newYearFinishedLoadingReducer: newYearFinishedLoadingReducer,\n\n  // Timeline columns\n  ageTimelineColumnsReducer: ageTimelineColumnsReducer,\n  boroughTimelineColumnsReducer: boroughTimelineColumnsReducer,\n  categoryTimelineColumnsReducer: categoryTimelineColumnsReducer,\n  raceTimelineColumnsReducer: raceTimelineColumnsReducer,\n  sexTimelineColumnsReducer: sexTimelineColumnsReducer,\n\n  // Filters\n  categoryFilterReducer: categoryFilterReducer,\n  offenseFilterReducer: offenseFilterReducer,\n  ageFilterReducer: ageFilterReducer,\n  raceFilterReducer: raceFilterReducer,\n  sexFilterReducer: sexFilterReducer,\n  boroughFilterReducer: boroughFilterReducer,\n  applyingFiltersReducer: applyingFiltersReducer,\n  resetFiltersReducer: resetFiltersReducer,\n\n  // Timeline graph data\n  trendsAvailableReducer: trendsAvailableReducer,\n  ageGroupTimelineGraphDataReducer: ageGroupTimelineGraphDataReducer,\n  boroughTimelineGraphDataReducer: boroughTimelineGraphDataReducer,\n  categoryTimelineGraphDataReducer: categoryTimelineGraphDataReducer,\n  genderTimelineGraphDataReducer: genderTimelineGraphDataReducer,\n  raceTimelineGraphDataReducer: raceTimelineGraphDataReducer,\n});\n\nconst store = createStore(RootReducer);\n\nexposeStore(store);\n","/* eslint no-param-reassign: 0, no-console: 0 */\n\nimport { createStore, compose } from 'redux';\n\nimport {\n  PATCH_TYPE_CREATE_OBJECT,\n  PATCH_TYPE_DELETE_OBJECT,\n  PATCH_TYPE_RETURN_STATE,\n} from './exposeStore';\n\nconst REPLACE_STATE = Symbol('REPLACE_STATE');\n\nconst applyPatches = (objMap, oldState, patches) => {\n  let state = oldState;\n  patches.forEach((patch) => {\n    switch (patch.type) {\n      case PATCH_TYPE_CREATE_OBJECT: {\n        const obj = patch.isArray ? [] : {};\n        Object.keys(patch.props).forEach((name) => {\n          const value = patch.props[name];\n          if (typeof value === 'object' && value !== null) {\n            obj[name] = objMap.get(value.id);\n          } else {\n            obj[name] = value;\n          }\n        });\n        objMap.set(patch.id, obj);\n        break;\n      }\n      case PATCH_TYPE_DELETE_OBJECT:\n        objMap.delete(patch.id);\n        break;\n      case PATCH_TYPE_RETURN_STATE:\n        state = objMap.get(patch.id);\n        break;\n      default:\n        throw new Error(`wrapStore unknown patch type: ${patch.type}`);\n    }\n  });\n  return state;\n};\n\nconst applyWorker = worker => createStoreOrig => (...args) => {\n  const store = createStoreOrig(...args);\n  const dispatch = (action) => {\n    if (typeof action.type === 'string') {\n      worker.postMessage(action);\n    } else {\n      store.dispatch(action);\n    }\n  };\n  const objMap = new Map();\n  worker.onmessage = (e) => {\n    const state = applyPatches(objMap, store.getState(), e.data);\n    store.dispatch({ type: REPLACE_STATE, state });\n  };\n  worker.onerror = () => {\n    console.error('wrapStore worker error');\n  };\n  worker.onmessageerror = () => {\n    console.error('wrapStore worker message error');\n  };\n  return {\n    ...store,\n    dispatch,\n  };\n};\n\nexport const wrapStore = (worker, initialState, enhancer) => {\n  const reducer = (state, action) => {\n    if (action.type === REPLACE_STATE) return action.state;\n    return state;\n  };\n  const store = createStore(\n    reducer,\n    initialState,\n    compose(applyWorker(worker), enhancer || (x => x)),\n  );\n  return store;\n};\n"],"sourceRoot":""}